#!/bin/bash

# This script is multiple claude communication using tmux script

# Usage:
#   claude-team send boss1 "Please review the latest report."
#   claude-team send worker1 "Please complete the task by EOD."
#
#   recipient: president, boss1, worker1, worker2, etc.

LOG_FILE="/tmp/claude_team.log"
SESSION_NAME="claude-team"

log() {
  local message="$1"
  echo "$(date '+%Y-%m-%d %H:%M:%S') - $message" >> "$LOG_FILE"
}


# usage:
#   recipient is <window>.<pane-index>. pane-index defaults to 1 if not specified
#   - claude-team send <recipient> <message>
send_message() {
  local recipient="$1"
  local message="$2"

  if [[ -z "$recipient" || -z "$message" ]]; then
    echo "Usage: claude-team send <recipient> <message>"
    return 1
  fi

  if ! session_exists; then
    echo "Tmux session $SESSION_NAME does not exist. Please start the session first."
    return 1
  fi

  # Extract window and pane index from recipient
  local target_name
  local pane_index=1
  if [[ "$recipient" =~ ^([^.]+)\.([0-9]+)$ ]]; then
    target_name="${BASH_REMATCH[1]}"
    pane_index="${BASH_REMATCH[2]}"
  else
    target_name="$recipient"
  fi

  target_name="$SESSION_NAME:$target_name.$pane_index"
  if ! tmux list-panes -t "$target_name" &>/dev/null; then
    echo "Target pane $target_name does not exist."
    return 1
  fi

  log "Sending message to $recipient ($target_name): $message"
  tmux send-keys -t "$target_name" "$message" C-m
  sleep 0.5
  tmux send-keys -t "$target_name" C-m
}

list_team_members() {
  if ! session_exists; then
    echo "Tmux session $SESSION_NAME does not exist."
    return 1
  fi

  tmux list-panes -s -t "$SESSION_NAME" -F "#{window_name}.#{pane_index}" | sort
}

session_exists() {
  tmux has-session -t "$SESSION_NAME" 2>/dev/null
}

# usage:
#   pane-index if not, default to 1
#   - add_team_member <windows>.<pane-index>
#   - add_team_member workers.1
#   - add_team_member workers1.1
#   - add_team_member president
add_team_member() {
  local target="$1"

  if [[ -z "$target" ]]; then
    echo "Usage: add_team_member <window>.<pane-index>"
    return 1
  fi

  if ! session_exists; then
    echo "Tmux session $SESSION_NAME does not exist. Please start the session first."
    return 1
  fi

  local window_name
  local pane_index=1
  if [[ "$target" =~ ^([^.]+)\.([0-9]+)$ ]]; then
    window_name="${BASH_REMATCH[1]}"
    pane_index="${BASH_REMATCH[2]}"
  else
    window_name="$target"
  fi

  if ! tmux list-windows -t "$SESSION_NAME" -F "#{window_name}" | grep -q "^$window_name\$"; then
    log "Creating new window: $window_name in session $SESSION_NAME"
    tmux new-window -t "$SESSION_NAME" -n "$window_name"
  fi

  # check if the pane already exists
  if list_team_members | grep -q "^$window_name\.$pane_index$"; then
    echo "Pane $window_name.$pane_index already exists."
    return 0
  else
    log "Creating new pane: $window_name.$pane_index in session $SESSION_NAME"
    tmux split-window -t "$SESSION_NAME:$window_name" -p 50
    tmux select-layout -t "$SESSION_NAME:$window_name" even-vertical
  fi
}

start() {
  if ! session_exists; then
    log "Creating tmux session: $SESSION_NAME"
    tmux new-session -d -s "$SESSION_NAME" -n president

    add_team_member "president"
    add_team_member "boss"
    add_team_member "workers.1"
    add_team_member "workers.2"
    add_team_member "workers.3"

    log "Tmux session $SESSION_NAME started with windows and panes."
  else
    log "Tmux session $SESSION_NAME already exists."
  fi
}

main() {
  case "$1" in
    send)
      shift
      send_message "$@"
      ;;
    add)
      shift
      add_team_member "$@"
      ;;
    start)
      start
      ;;
    list)
      list_team_members
      ;;
    *)
      echo "Usage: claude-team send <recipient> <message>"
      exit 1
      ;;
  esac
}

main "$@"
