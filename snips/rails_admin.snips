snippet template "menu, index, show"
# frozen_string_literal: true

ActiveAdmin.register Book do
  menu parent: 'Manage', priority: 1

  index do
    column :id
    column :title
    column(:loaners) do |loaners|
      loaners.ai(html: true)
    end
    column :created_at

    actions
  end

  show do
    attributes_table do
      row :title
      row :author
    end

    panel :loaners do
      table_for book.loaners do
        column(:id) { _1 }
        column :expired_at
      end
    end
  end
end
endsnippet

snippet default_show ""
  show do
    default_main_content

    attributes_table do
      row(:title) { book.title }
    end
  end
endsnippet

snippet controller_method ""
  controller do
    def collection = Book.all
  end

  show do
    table do |tbl|
      tbl.thead.tr do |tr|
        controller.header_names.map { tr.th _1 }
      end
      tbl.tbody do |tbody|
        collection.each do |book|
          tbody.tr do |tr|
            tr.td book.title
          end
        end
      end
    end
  end
endsnippet

snippet scoped_collection "filter collection"
  controller do
    def scoped_collection = case action_name
                            when 'index' then super.select(super.column_names - %w[data])
                            else super.select(super.column_names - %w[data])
                            end
  end
endsnippet

snippet remove_filter ""
  preserve_default_filters!

  remove_filter :user
endsnippet

snippet add_filter ""
  filter :user_email_eq, as: :string, label: 'User Email'
endsnippet

snippet resource_class_filter_columns ""
  index do
    selectable_column
    id_column
    resource_class.content_columns
                  .reject { |col| %w[created_at updated_at].include? col.name }
                  .each { |col| column col.name }
    actions
  end
endsnippet

snippet csv ""
  csv do
    column :id
    column :item_count do |user|
    end
  end
endsnippet
